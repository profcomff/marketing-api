"""user info & action info extended

Revision ID: f0483cc29e6f
Revises: f2d45b6daecf
Create Date: 2022-09-08 08:23:55.602803

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f0483cc29e6f'
down_revision = 'f2d45b6daecf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('room')
    op.drop_table('lecturer')
    op.drop_table('lesson')
    op.drop_table('timetable')
    op.drop_table('group')
    op.drop_table('credentials')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('credentials',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('group', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('scope', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('token', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('create_ts', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('update_ts', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='credentials_pkey')
    )
    op.create_table('group',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('group_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('timetable',
    sa.Column('start', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('end', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('odd', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('even', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('weekday', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('num', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('group', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('place', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teacher', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('lesson',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lecturer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_ts', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_ts', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='lesson_group_id_fkey'),
    sa.ForeignKeyConstraint(['lecturer_id'], ['lecturer.id'], name='lesson_lecturer_id_fkey'),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name='lesson_room_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='lesson_pkey')
    )
    op.create_table('lecturer',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('middle_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='lecturer_pkey')
    )
    op.create_table('room',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('direction', postgresql.ENUM('North', 'South', name='Directions'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='room_pkey')
    )
    # ### end Alembic commands ###
